Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"

Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.

Constraints:

    1 <= strs.length <= 200
    0 <= strs[i].length <= 200
    strs[i] consists of only lower-case English letters.



Solution:

class Solution {
    public String longestCommonPrefix(String[] strs) {
        String s = strs[0];                                    // frist string element
        for(int i=1 ; i<strs.length ; ++i){                    // start from 2nd element till end
            while(strs[i].indexOf(s) != 0){                    // compare from total length till 0
                s = s.substring(0, s.length() - 1);            // method which find subString, compare every element of str[0] to other string elements
                if(s.isEmpty()){                               // if there is no same prefix
                    return "";
                }
            }
        }
        return s;                                              // return final answer
    }
}
