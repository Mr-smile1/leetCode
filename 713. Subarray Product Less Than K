

class Solution {
    public int numSubarrayProductLessThanK(int[] array, int k) {
        int count = 0;
        int i, j, mul, n = array.length;
 
        for (i = 0; i < n; i++) {
 
            // Counter for single element
            if (array[i] < k)
                count++;
 
            mul = array[i];
 
            for (j = i + 1; j < n; j++) {
 
                // Multiple subarray
                mul = mul * array[j];
 
                // If this multiple is less
                // than k, then increment
                if (mul < k)
                    count++;
                else
                    break;
            }
        }
 
        return count;
    }
}

time : O(n^2)
space : O(1)

///////////////////////////////////////////////////////////////////////////////////////////////


class Solution {
    public int numSubarrayProductLessThanK(int[] nums, int k) {
        int p=1;
        int l=0,r=0,count=0;
        while(r<nums.length)
        {
            p*=nums[r];
            if(p<k)
                count+=r-l+1;
            else
            {
                while(l<=r && l<nums.length && p>=k)
                {
                    p/=nums[l++];
                }
               count+=r-l+1;
            }
            r++;
        }
        return count;
    }
}
