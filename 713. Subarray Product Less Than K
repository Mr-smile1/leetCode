

class Solution {
    public int numSubarrayProductLessThanK(int[] array, int k) {
        int count = 0;
        int i, j, mul, n = array.length;
 
        for (i = 0; i < n; i++) {
 
            // Counter for single element
            if (array[i] < k)
                count++;
 
            mul = array[i];
 
            for (j = i + 1; j < n; j++) {
 
                // Multiple subarray
                mul = mul * array[j];
 
                // If this multiple is less
                // than k, then increment
                if (mul < k)
                    count++;
                else
                    break;
            }
        }
 
        return count;
    }
}

time : O(n^2)
space : O(1)

///////////////////////////////////////////////////////////////////////////////////////////////

class Solution {
    public int numSubarrayProductLessThanK(int[] nums, int k) {
        int n = nums.length;
        
        if(k <= 1) {
            return 0;
        }
        
        int prod = 1;
        int left = 0;
        int count = 0;
        for(int right = 0; right < n; right++) {
            prod *= nums[right];
            while(prod >= k) {
                prod /= nums[left];
                left++;
            }
            count += (right-left+1);
        }
        return count;
    }
}
